完全背包：有m种物品和一个容量为n的背包，每种物品都有无限件可用。第i种物品的费用是a[i]，价值是w[i]。
求解将哪些物品装入背包可使这些物品的费用总和不超过背包容量，且价值总和最大。　　
#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
const int mx = 2e6 + 7;
ll dp[mx]={0};
ll a[mx],w[mx];
int main() {
    ios_base::sync_with_stdio(false);
#ifdef ACM_LOCAL
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#endif
    int n, m;
    cin >> n >> m;
    for (int i = 1; i <= m; i++)
        cin >> a[i] >> w[i];
    for (int i = 1; i <= m; i++) {
        for (int j = a[i]; j <= n; j++)
            dp[j] = max(dp[j], dp[j - a[i]] + w[i]);
    }
    cout<<dp[n]<<endl;
    return 0;
}

